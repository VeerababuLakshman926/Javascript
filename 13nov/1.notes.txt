Array methods in detail: 
Basic: 
  var arr=[];
            arr.push(10); //elements add at the end
            arr.push(20);
            arr.push(30);
            arr.unshift(5); //element will add at first
            var index = arr.indexOf(10);
            arr.splice(index,0,7); //7 is element to add at index of 10 and 0 refers no deletion of element 10
            arr.pop();  //last element will delete
            arr.shift(); //first element is deleted
            var index1 = arr.indexOf(10);
            arr.splice(index1) //from index1 one delete elements and if dont specify the number elements to be delete, 
                                then it will delete all the array
            console.log(arr); 
Advanced: 
 <html>
    <head>

    </head>
    <body>

                <script>

                    var arr = [9,100,3,2,90,78,8,1];

                    //ascending order
                    var result = arr.sort(function(a,b){
                        return a-b;
                    })
                    console.log("ascending order"+result);

                    //descending order
                    var result1 = arr.sort(function(a,b){
                        return b-a;
                    })
                    console.log("descending order"+result1);



                </script>
    </body>
</html>


Difference between forEach, filter and map: 
forEach: used for iterating the elements and does not return any result . 
filter: used to filter the data from the existing array based on boolean result. 
filter function returns an array as a result. 
map: used to customize the existing array into a new array. 
<html>
    <head>

    </head>
    <body>
        

                <script>

                    var arr=[1,2,4,1,245,3,0,0,"abc","xyz"];

                    arr.forEach( function(value){
                        console.log(value);
                    })


                    var result = arr.filter(function(value){
                        return typeof value == "number";
                    })
                    console.log(result);

                    var final = arr.map(function(value){
                        return value*2; 
                    })
                    console.log(final);

                    var finalresult = result.map(function(value){
                        return value*2; 
                    })
                    console.log(finalresult);



                </script>
    </body>
</html>

Note: The main difference between map and filter is map will return whatever returning into the new array and filter based on the
condition, if it is true it will return and if it is false it is not going to add to the new array(16min reference).



Problem Statement: 
Create a product adding form and display the products as in when the users adds it. 


<html>
    <head>

    </head>
    <body>

        <input type="text" id="productId" placeholder="enter productId"> <br><br>
        <input type="text" id="name" placeholder="enter name"> <br><br>
        <input type="text" id="price" placeholder="enter price"> <br><br>
        <button onclick="addproduct()">Add Product</button>

        <ul id="list">

        </ul>
        
                <script>

                    var products=[];
                    function addproduct(){
                        var productId = document.getElementById("productId").value;
                        var name = document.getElementById("name").value;
                        var price = document.getElementById("price").value;
                        var product = {
                            productId : productId,
                            name : name,
                            price : price
                        }

                        products.push(product);
                        showproducts();
                    }

                    function showproducts(){
                        var listItems = "";
                        products.forEach(function(product){
                            listItems = listItems+ "<li>" + product.productId + "&nbsp;&nbsp;&nbsp;" + product.name + "&nbsp;&nbsp;&nbsp;" + product.price + "</li>";
                        })

                        document.getElementById("list").innerHTML = listItems;

                    }


                </script>
    </body>
</html>


Numbers and Dates: 
Numbers: 
We can create numbers in 2 ways, 
1. as a primitive value 
2. as an object 

 <html>
    <head>
    </head>
     <body>
         
        <script>
            
                            //using primitive type
                            var age = 20; 
                            // using object
                             var age1 = new Number(20); 
                             console.log(age); 
                             console.log(age1);
                             console.log(age == age1); //value is same
                             console.log(age === age1); // data typer is not same so it will give false

                             var price =91.42319; 
                             console.log(price.toFixed(3)); //it will consider only 3 digits after the point i.e., 91.423
                             console.log(price.toPrecision(3)); //it will consider 3 digits from the starting of the number i.e., 91.4


        </script>
                
     </body>
</html>

Date: 
Javascript provides a date object using which we can get the current date and time. 
                     xvar date = new Date();
                     console.log(date); //information about day month year, time and time zone
                     console.log(date.getDate()); //information about day only
                     console.log(date.getMonth()+1); //It counts from zero so we are giving +1
                     console.log(date.getFullYear()); //year
                     console.log(date.getHours()); //hours will print
                     console.log(date.getMinutes()); //minutes
                     console.log(date.getSeconds()); //seconds
Problem Statement: 
Create a timestamp in the following format. 
 HH:MM:SS  MM/DD/YYYY 
 <html>
    <head></head>
    <body>
        

        <script>
                     function getTimeStamp(){
                         var date = new Date();
                         var t=  concatZero(date.getHours()) +":"+concatZero(date.getMinutes())+":"+ concatZero(date.getSeconds());
                         var d = (date.getMonth()+1) +"/"+ date.getDate()+"/"+ date.getFullYear(); 
                         return t + "    " + d;
                     }
                      console.log(getTimeStamp());
                       
                      function concatZero(input){
                         if(input <= 9){
                                         return '0'+input;
                         }
                         return input;
                      }
        </script>
    </body>
</html>
 
